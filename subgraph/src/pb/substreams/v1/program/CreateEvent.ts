// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class CreateEvent {
  static encode(message: CreateEvent, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.name);

    writer.uint32(18);
    writer.string(message.symbol);

    writer.uint32(26);
    writer.string(message.uri);

    writer.uint32(34);
    writer.string(message.mint);

    writer.uint32(42);
    writer.string(message.bondingCurve);

    writer.uint32(50);
    writer.string(message.user);
  }

  static decode(reader: Reader, length: i32): CreateEvent {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CreateEvent();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.name = reader.string();
          break;

        case 2:
          message.symbol = reader.string();
          break;

        case 3:
          message.uri = reader.string();
          break;

        case 4:
          message.mint = reader.string();
          break;

        case 5:
          message.bondingCurve = reader.string();
          break;

        case 6:
          message.user = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  name: string;
  symbol: string;
  uri: string;
  mint: string;
  bondingCurve: string;
  user: string;

  constructor(
    name: string = "",
    symbol: string = "",
    uri: string = "",
    mint: string = "",
    bondingCurve: string = "",
    user: string = ""
  ) {
    this.name = name;
    this.symbol = symbol;
    this.uri = uri;
    this.mint = mint;
    this.bondingCurve = bondingCurve;
    this.user = user;
  }
}
